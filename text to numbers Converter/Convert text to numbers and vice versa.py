# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B4PVq8kUZCXS2VmtIJXfA9vCO5ssT9lm
"""

!pip install hazm

from hazm import Normalizer
import re

words_to_numbers = {
    "صفر": 0,
    "یک": 1, "دو": 2, "سه": 3, "چهار": 4, "پنج": 5,
    "شش": 6, "هفت": 7, "هشت": 8, "نه": 9,
    "ده": 10, "یازده": 11, "دوازده": 12,
    "سیزده": 13, "چهارده": 14, "پانزده": 15,
    "شانزده": 16, "هفده": 17, "هجده": 18, "نوزده": 19,
    "بیست": 20, "سی": 30, "چهل": 40, "پنجاه": 50,
    "شصت": 60, "هفتاد": 70, "هشتاد": 80, "نود": 90,
    "صد": 100, "دویست": 200, "سیصد": 300, "چهارصد": 400,
    "پانصد": 500, "ششصد": 600, "هفتصد": 700,
    "هشتصد": 800, "نهصد": 900
}

magnitudes = {
    "میلیارد": 1000000000,
    "میلیون": 1000000,
    "هزار": 1000
}

def convert_to_persian_number(number):
    english_to_persian_digits = str.maketrans("0123456789", "۰۱۲۳۴۵۶۷۸۹")
    return str(number).translate(english_to_persian_digits)

def parse_simple_number(words):
    total = 0
    for word in words:
        if word in words_to_numbers:
            total += words_to_numbers[word]
    return total

def text_to_number_fa(text):
    normalizer = Normalizer()
    text = normalizer.normalize(text)
    text = text.replace(" و ", " ")
    words = text.strip().split()

    total = 0
    current_chunk = []
    current_magnitude = None

    for word in words:
        if word in magnitudes:
            num = parse_simple_number(current_chunk)
            total += num * magnitudes[word]
            current_chunk = []
        else:
            current_chunk.append(word)

    if current_chunk:
        total += parse_simple_number(current_chunk)

    return total

# --- اجرا ---
user_input = input("عدد را به صورت حروف فارسی وارد کنید: ")
number_result = text_to_number_fa(user_input)
persian_number = convert_to_persian_number(number_result)

print(" ورودی :", user_input)
print(" خروجی عددی (فارسی):", persian_number)

from hazm import Normalizer
import re

words_to_numbers = {
    "صفر": 0, "یک": 1, "دو": 2, "سه": 3, "چهار": 4, "پنج": 5,
    "شش": 6, "هفت": 7, "هشت": 8, "نه": 9,
    "ده": 10, "یازده": 11, "دوازده": 12,
    "سیزده": 13, "چهارده": 14, "پانزده": 15,
    "شانزده": 16, "هفده": 17, "هجده": 18, "نوزده": 19,
    "بیست": 20, "سی": 30, "چهل": 40, "پنجاه": 50,
    "شصت": 60, "هفتاد": 70, "هشتاد": 80, "نود": 90,
    "صد": 100, "دویست": 200, "سیصد": 300, "چهارصد": 400,
    "پانصد": 500, "ششصد": 600, "هفتصد": 700,
    "هشتصد": 800, "نهصد": 900
}

magnitudes = {
    "میلیارد": 1000000000,
    "میلیون": 1000000,
    "هزار": 1000
}

all_keywords = list(words_to_numbers.keys()) + list(magnitudes.keys())

def normalize_input(text):
    normalizer = Normalizer()
    text = normalizer.normalize(text)
    text = text.replace("‌", "")  # حذف نیم‌فاصله
    text = text.replace(" ", "")  # حذف فاصله‌های معمولی

    # تطبیق واژه‌ها از روی واژه‌نامه
    pattern = "(" + "|".join(sorted(all_keywords, key=len, reverse=True)) + ")"
    tokens = re.findall(pattern, text)
    return tokens

def convert_to_persian_number(number):
    return str(number).translate(str.maketrans("0123456789", "۰۱۲۳۴۵۶۷۸۹"))

def parse_simple_number(words):
    return sum(words_to_numbers.get(word, 0) for word in words)

def text_to_number_fa(text):
    words = normalize_input(text)
    total = 0
    current_chunk = []

    for word in words:
        if word in magnitudes:
            num = parse_simple_number(current_chunk)
            total += num * magnitudes[word]
            current_chunk = []
        else:
            current_chunk.append(word)

    if current_chunk:
        total += parse_simple_number(current_chunk)

    return total

# --- اجرا ---
user_input = input("عدد را به صورت حروف فارسی وارد کنید (با یا بدون فاصله): ")
number_result = text_to_number_fa(user_input)
persian_number = convert_to_persian_number(number_result)

print("ورودی:", user_input)
print("خروجی عددی (فارسی):", persian_number)

!pip install num2fawords

from num2fawords import words

def number_to_farsi_text(number):
    try:
        number = int(number)
        return words(number)
    except:
        return "لطفاً یک عدد صحیح معتبر وارد کنید."

# گرفتن ورودی از کاربر
user_input = input("لطفاً عدد مورد نظر خود را وارد کنید: ")
result = number_to_farsi_text(user_input)
print("عدد به حروف فارسی:", result)

"""# سیستم هوشمند دوطرفه :    """

from hazm import Normalizer
from num2fawords import words as num_to_words
import re

# دیکشنری‌های کامل
words_to_numbers = {
    "صفر": 0, "یک": 1, "دو": 2, "سه": 3, "چهار": 4, "پنج": 5,
    "شش": 6, "هفت": 7, "هشت": 8, "نه": 9,
    "ده": 10, "یازده": 11, "دوازده": 12, "سیزده": 13, "چهارده": 14, "پانزده": 15,
    "شانزده": 16, "هفده": 17, "هجده": 18, "نوزده": 19,
    "بیست": 20, "سی": 30, "چهل": 40, "پنجاه": 50,
    "شصت": 60, "هفتاد": 70, "هشتاد": 80, "نود": 90,
    "صد": 100, "دویست": 200, "سیصد": 300, "چهارصد": 400,
    "پانصد": 500, "ششصد": 600, "هفتصد": 700, "هشتصد": 800, "نهصد": 900
}

magnitudes = {
    "میلیارد": 1000000000,
    "میلیون": 1000000,
    "هزار": 1000
}

all_keywords = list(words_to_numbers.keys()) + list(magnitudes.keys())

# تبدیل عدد انگلیسی به فارسی
def convert_to_persian_number(number):
    return str(number).translate(str.maketrans("0123456789", "۰۱۲۳۴۵۶۷۸۹"))

# نرمال‌سازی ورودی متن فارسی
def normalize_input(text):
    normalizer = Normalizer()
    text = normalizer.normalize(text)
    text = text.replace("‌", "").replace(" ", "")
    pattern = "(" + "|".join(sorted(all_keywords, key=len, reverse=True)) + ")"
    return re.findall(pattern, text)

# تبدیل متن فارسی به عدد
def text_to_number_fa(text):
    words = normalize_input(text)
    total = 0
    chunk = []

    for w in words:
        if w in magnitudes:
            total += sum(words_to_numbers.get(word, 0) for word in chunk) * magnitudes[w]
            chunk = []
        else:
            chunk.append(w)

    if chunk:
        total += sum(words_to_numbers.get(word, 0) for word in chunk)

    return total

# تبدیل عدد به متن فارسی
def number_to_text_fa(number):
    try:
        number = int(number)
        return num_to_words(number)
    except:
        return "عدد وارد شده معتبر نیست."

# تشخیص نوع ورودی و اجرا
def smart_converter(user_input):
    user_input = user_input.strip()
    if user_input.isdigit():  # اگر فقط عدد بود
        return number_to_text_fa(user_input)
    else:
        try:
            num = text_to_number_fa(user_input)
            return convert_to_persian_number(num)
        except:
            return "ورودی نامعتبر است."

# --- اجرای نهایی ---
user_input = input("عددی یا متن عددی فارسی وارد کنید: ")
result = smart_converter(user_input)
print(" خروجی:", result)

!pip install num2words
!pip install word2number
!pip install gTTS
!pip install playsound==1.2.2

from num2words import num2words
from word2number import w2n
from gtts import gTTS
from playsound import playsound
import os

# 🎧 پخش صوت انگلیسی
def play_english_audio(text):
    try:
        tts = gTTS(text=text, lang='en')
        filename = "voice_en.mp3"
        tts.save(filename)
        playsound(filename)
        os.remove(filename)
    except Exception as e:
        print(" Audio Error:", e)

#  تبدیل هوشمند بر اساس ورودی
def smart_converter_en(user_input):
    user_input = user_input.strip()
    if user_input.replace(",", "").replace("_", "").isdigit():
        number = int(user_input.replace(",", "").replace("_", ""))
        result = num2words(number, lang='en')
        play_english_audio(result)
        return result
    else:
        try:
            number = w2n.word_to_num(user_input)
            result = "{:,}".format(number)
            play_english_audio(result)
            return result
        except:
            return " Invalid input."

#  اجرای برنامه
user_input = input(" Enter a number or its English words:\n> ")
output = smart_converter_en(user_input)
print(" Output:", output)

"""#   سیستم جامع فارسی + انگلیسی + اعشاری + منفی :"""

from hazm import Normalizer
from num2fawords import words as fa_words
from word2number import w2n
from num2words import num2words
import re

# فارسی - دیکشنری اعداد
fa_words_to_numbers = {
    "صفر": 0, "یک": 1, "دو": 2, "سه": 3, "چهار": 4, "پنج": 5,
    "شش": 6, "هفت": 7, "هشت": 8, "نه": 9, "ده": 10, "یازده": 11,
    "دوازده": 12, "سیزده": 13, "چهارده": 14, "پانزده": 15,
    "شانزده": 16, "هفده": 17, "هجده": 18, "نوزده": 19,
    "بیست": 20, "سی": 30, "چهل": 40, "پنجاه": 50,
    "شصت": 60, "هفتاد": 70, "هشتاد": 80, "نود": 90,
    "صد": 100, "دویست": 200, "سیصد": 300, "چهارصد": 400,
    "پانصد": 500, "ششصد": 600, "هفتصد": 700, "هشتصد": 800, "نهصد": 900
}
fa_magnitudes = {
    "هزار": 1000, "میلیون": 10**6, "میلیارد": 10**9
}
fa_all_keywords = list(fa_words_to_numbers.keys()) + list(fa_magnitudes.keys()) + ["منفی", "ممیز"]

# تبدیل فارسی به عدد
def fa_text_to_number(text):
    normalizer = Normalizer()
    text = normalizer.normalize(text).replace("‌", "").replace(" ", "")
    pattern = "(" + "|".join(sorted(fa_all_keywords, key=len, reverse=True)) + ")"
    tokens = re.findall(pattern, text)

    total = 0
    chunk = []
    negative = False
    decimal_part = 0.0
    is_decimal = False
    decimal_chunk = []

    for word in tokens:
        if word == "منفی":
            negative = True
        elif word == "ممیز":
            is_decimal = True
        elif word in fa_magnitudes:
            chunk_val = sum(fa_words_to_numbers.get(w, 0) for w in chunk)
            total += chunk_val * fa_magnitudes[word]
            chunk = []
        elif is_decimal:
            decimal_chunk.append(str(fa_words_to_numbers.get(word, 0)))
        else:
            chunk.append(word)

    total += sum(fa_words_to_numbers.get(w, 0) for w in chunk)
    if decimal_chunk:
        decimal_part = float("0." + "".join(decimal_chunk))
    final = total + decimal_part
    return -final if negative else final

# تبدیل عدد به متن فارسی
def fa_number_to_text(n):
    try:
        n = float(n)
        if n < 0:
            return "منفی " + fa_words(abs(int(n)))  # بدون اعشار برای متن
        else:
            return fa_words(int(n))
    except:
        return "خطا در تبدیل عدد فارسی"

# تبدیل متن انگلیسی به عدد (حمایت از اعشار و منفی)
def en_text_to_number(text):
    try:
        text = text.lower().replace("minus", "negative")
        text = text.replace("point", ".")
        if "negative" in text:
            text = text.replace("negative", "").strip()
            return -float(w2n.word_to_num(text))
        return float(w2n.word_to_num(text))
    except:
        return " Invalid English input"

# تبدیل عدد به متن انگلیسی
def en_number_to_text(n):
    try:
        n = float(n)
        if n < 0:
            return "minus " + num2words(abs(n), lang='en')
        return num2words(n, lang='en')
    except:
        return " Invalid number"

# تشخیص فارسی یا انگلیسی
def detect_lang(text):
    farsi_chars = "آابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی"
    return any(ch in text for ch in farsi_chars)

# تبدیل هوشمند دوطرفه و دو زبانه
def smart_converter(text):
    text = text.strip()
    is_farsi = detect_lang(text)

    if text.replace(",", "").replace(".", "").replace("-", "").isdigit():
        num = float(text)
        return fa_number_to_text(num) if is_farsi else en_number_to_text(num)

    try:
        if is_farsi:
            num = fa_text_to_number(text)
            return f"{num:,}"
        else:
            num = en_text_to_number(text)
            return f"{num:,}"
    except:
        return " ورودی نامعتبر است"

# --- اجرا ---
user_input = input(" عدد یا متن عددی وارد کنید (فارسی یا انگلیسی):\n> ")
result = smart_converter(user_input)
print(" خروجی:", result)